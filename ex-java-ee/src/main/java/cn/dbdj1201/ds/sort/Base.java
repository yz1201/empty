package cn.dbdj1201.ds.sort;

/**
 * @author tyz1201
 * @datetime 2020-04-24 11:34
 * 排序算法介绍
 **/
public class Base {
    /*
    分类：
        内部排序：将需要处理的数据加载到内部存储器中排序
            插入排序：
                直接插入排序
                希尔排序
            选择排序：
                简单选择排序
                堆排序
            交换排序：
                冒泡排序
                快速排序
            归并排序
            基数排序
        外部排序：数据量过大，需借助外部储存器排序。
     度量一个程序/算法执行时间的两种方法：
        事后统计：直接跑一遍
        事前估算。分析时间复杂度。
     时间频度：一个算法耗费的时间与算法中语句的执行次数呈正比例，哪个算法中语句执行次数越多，它耗费时间就越多。一个算法中的语句执行次数称为语句频度或者时间
   频度。记为T(n)
     常见的时间复杂度：o(1),o(n),o(n^2),o(log2n),o(nlog2n),o(2^n)
     平均时间复杂度，最坏时间复杂度。
      在做算法分析时，主要讨论的是时间复杂度，从用户体验上来看，更看重程序执行的速度，一些缓存产品，redis/，memcache和算法(基数排序)本质上就是用空间换时间。
     */
}
